{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Downloads\\\\Work-Wonders\\\\client\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport FreelancerMenu from './FreelancerComponents/FreelancerMenu';\nimport noImage from '../assets/Images/no-image.png';\nimport { useEffect, useState } from 'react';\nimport Messages from './Messages';\nimport ClientMenu from './ClientComponents/ClientMenu';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { tokenExists } from '../Redux/UserSlice';\nimport { myConversations } from '../Redux/ChatSlice';\nimport Loading from './Loading';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat(_ref) {\n  _s();\n  var _data$userConversatio, _data$userConversatio2;\n  let {\n    type\n  } = _ref;\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const {\n    token\n  } = useSelector(state => state.user);\n  const {\n    data\n  } = useSelector(state => state.chat);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    tokenExists(token, navigate, dispatch).then(data => (data == false || JSON.parse(localStorage.getItem('userInfo'))._id != id || window.location.href.slice(32).split('/')[0] != JSON.parse(localStorage.getItem('userInfo')).role) && navigate(\"/login\"));\n    dispatch(myConversations()).unwrap().then(data => {\n      setTimeout(() => {\n        setLoading(false);\n        if (data.status == 404) {\n          toast.error(data.msg);\n          navigate('/login');\n        }\n        if (data.status == 505) {\n          toast.error(data.msg);\n        }\n      }, 1000);\n    }).catch(rejectedValueOrSerializedError => {\n      setTimeout(() => {\n        setLoading(false);\n        toast.error(rejectedValueOrSerializedError);\n      }, 1000);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Chat\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: (data === null || data === void 0 ? void 0 : (_data$userConversatio = data.userConversation) === null || _data$userConversatio === void 0 ? void 0 : _data$userConversatio.length) != 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages\",\n              children: data === null || data === void 0 ? void 0 : (_data$userConversatio2 = data.userConversation) === null || _data$userConversatio2 === void 0 ? void 0 : _data$userConversatio2.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: selectedMessage != conversation._id ? \"messageSection\" : \"messageSection active\",\n                onClick: () => setSelectedMessage(conversation._id),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: conversation.avatar == \"no-image.png\" ? noImage : `http://localhost:3001/ProfilePic/${conversation.avatar}`,\n                  alt: \"test image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"messageUserInfo\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"messageUserName\",\n                    children: conversation.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this)]\n              }, conversation._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selectedMessages\",\n              children: selectedMessage == null ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"nomessage\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title\",\n                  children: \"WorkWonders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Select A Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(Messages, {\n                selectedMessage: selectedMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"zeroMessage\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nomessage\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title\",\n                children: \"WorkWonders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"You have no messages for now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), type == \"freelancer\" ? /*#__PURE__*/_jsxDEV(FreelancerMenu, {\n          active: \"chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(ClientMenu, {\n          active: \"chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Chat, \"FZ3PzFm0ZqXHi1Yt2jPddsdS/5A=\", false, function () {\n  return [useSelector, useSelector, useParams, useNavigate, useDispatch];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["FreelancerMenu","noImage","useEffect","useState","Messages","ClientMenu","useDispatch","useSelector","useNavigate","useParams","tokenExists","myConversations","Loading","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_ref","_s","_data$userConversatio","_data$userConversatio2","type","selectedMessage","setSelectedMessage","loading","setLoading","token","state","user","data","chat","id","navigate","dispatch","then","JSON","parse","localStorage","getItem","_id","window","location","href","slice","split","role","unwrap","setTimeout","status","error","msg","catch","rejectedValueOrSerializedError","children","fileName","_jsxFileName","lineNumber","columnNumber","className","userConversation","length","map","conversation","onClick","src","avatar","alt","username","active","_c","$RefreshReg$"],"sources":["C:/Users/rahul/Downloads/Work-Wonders/client/src/components/Chat.jsx"],"sourcesContent":["import FreelancerMenu from './FreelancerComponents/FreelancerMenu';\r\nimport noImage from '../assets/Images/no-image.png'\r\nimport { useEffect, useState } from 'react';\r\nimport Messages from './Messages';\r\nimport ClientMenu from './ClientComponents/ClientMenu';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { tokenExists } from '../Redux/UserSlice';\r\nimport { myConversations } from '../Redux/ChatSlice';\r\nimport Loading from './Loading';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Chat({ type }) {\r\n  const [selectedMessage, setSelectedMessage] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const { token } = useSelector(state => state.user)\r\n  const { data } = useSelector(state => state.chat)\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    tokenExists(token, navigate, dispatch).then(data => (data == false || JSON.parse(localStorage.getItem('userInfo'))._id != id || window.location.href.slice(32).split('/')[0] != JSON.parse(localStorage.getItem('userInfo')).role) && navigate(\"/login\"))\r\n    dispatch(myConversations()).unwrap().then(data => {\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n        if (data.status == 404) {\r\n          toast.error(data.msg)\r\n          navigate('/login')\r\n        }\r\n        if (data.status == 505) {\r\n          toast.error(data.msg)\r\n        }\r\n      }, 1000);\r\n    }).catch((rejectedValueOrSerializedError) => {\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n        toast.error(rejectedValueOrSerializedError)\r\n      }, 1000);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {loading && <Loading />}\r\n      <div className='Chat'>\r\n        <div className=\"container\">\r\n          <div className=\"section\">\r\n            {data?.userConversation?.length != 0 ?\r\n              <>\r\n                <div className=\"messages\">\r\n                  {data?.userConversation?.map(conversation =>\r\n                    <div key={conversation._id} className={selectedMessage != conversation._id ? \"messageSection\" : \"messageSection active\"} onClick={() => setSelectedMessage(conversation._id)}>\r\n                      <img src={conversation.avatar == \"no-image.png\" ? noImage : `http://localhost:3001/ProfilePic/${conversation.avatar}`} alt=\"test image\" />\r\n                      <div className=\"messageUserInfo\">\r\n                        <div className=\"messageUserName\">{conversation.username}</div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"selectedMessages\">\r\n                  {selectedMessage == null ? <div className=\"nomessage\">\r\n                    <div className=\"title\">\r\n                      WorkWonders\r\n                    </div>\r\n                    <span>\r\n                      Select A Message\r\n                    </span>\r\n                  </div> :\r\n                    <Messages selectedMessage={selectedMessage} />\r\n                  }\r\n                </div>\r\n              </>\r\n              :\r\n              <div className=\"zeroMessage\">\r\n                {<div className=\"nomessage\">\r\n                  <div className=\"title\">\r\n                    WorkWonders\r\n                  </div>\r\n                  <span>\r\n                    You have no messages for now\r\n                  </span>\r\n                </div>\r\n                }\r\n              </div>\r\n            }\r\n\r\n\r\n          </div>\r\n          {type == \"freelancer\" ? <FreelancerMenu active=\"chat\" /> : <ClientMenu active=\"chat\" />}\r\n\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}