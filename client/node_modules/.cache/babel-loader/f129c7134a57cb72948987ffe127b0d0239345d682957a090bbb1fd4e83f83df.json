{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport myAxios from \"./myAxios\";\n\n// Token Exists In Local Storage\nexport const tokenExists = async (stateToken, navigate, dispatch) => {\n  if (stateToken == null) {\n    const localStorageToken = localStorage.getItem(\"token\");\n    const localStorageUser = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (localStorageToken) {\n      dispatch(setToken(localStorageToken));\n      dispatch(setAvatar(localStorageUser.image));\n      dispatch(setUserId(localStorageUser._id));\n      dispatch(setUserRole(localStorageUser.role));\n      return true;\n    }\n    return false;\n  }\n};\n// Register User\nexport const signUp = createAsyncThunk(\"user/register\", async (body, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const res = await myAxios.post(\"/user/register\", body);\n    return res.data;\n  } catch (e) {\n    if (e.message == \"Network Error\") {\n      return rejectWithValue(\"Check The Server\");\n    }\n  }\n});\n// Login User\nexport const login = createAsyncThunk(\"user/login\", async (data, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const newData = JSON.stringify(data);\n    const res = await myAxios.post(\"/user/login\", newData, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (e) {\n    if (e.message == \"Network Error\") {\n      return rejectWithValue(\"Check The Server\");\n    }\n  }\n});\n// Update User\nexport const update = createAsyncThunk(\"user/update\", async (body, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  try {\n    const token = localStorage.getItem(\"token\");\n    const res = await myAxios.put(\"/user/update\", body, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return res.data;\n  } catch (e) {\n    if (e.message == \"Network Error\") {\n      return rejectWithValue(\"Check The Server\");\n    }\n  }\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    loggedUser: null,\n    token: null,\n    avatar: \"\",\n    data: [],\n    role: null,\n    error: null\n  },\n  reducers: {\n    setUserId: (state, action) => {\n      state.loggedUser = action.payload;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n    },\n    setAvatar: (state, action) => {\n      state.avatar = action.payload;\n    },\n    setUserRole: (state, action) => {\n      state.role = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    // Sign Up\n    builder.addCase(signUp.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n    builder.addCase(signUp.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n    // Login User\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n    // Update User\n    builder.addCase(update.fulfilled, (state, action) => {\n      state.data = action.payload;\n    });\n    builder.addCase(update.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  setUserId,\n  setToken,\n  setAvatar,\n  setUserRole\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","myAxios","tokenExists","stateToken","navigate","dispatch","localStorageToken","localStorage","getItem","localStorageUser","JSON","parse","setToken","setAvatar","image","setUserId","_id","setUserRole","role","signUp","body","_ref","rejectWithValue","res","post","data","e","message","login","_ref2","newData","stringify","headers","update","_ref3","token","put","Authorization","userSlice","name","initialState","loggedUser","avatar","error","reducers","state","action","payload","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/rahul/Downloads/Work-Wonders/client/src/Redux/UserSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport myAxios from \"./myAxios\";\r\n\r\n// Token Exists In Local Storage\r\nexport const tokenExists = async (stateToken, navigate, dispatch) => {\r\n  if (stateToken == null) {\r\n    const localStorageToken = localStorage.getItem(\"token\");\r\n    const localStorageUser = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    if (localStorageToken) {\r\n      dispatch(setToken(localStorageToken));\r\n      dispatch(setAvatar(localStorageUser.image));\r\n      dispatch(setUserId(localStorageUser._id));\r\n      dispatch(setUserRole(localStorageUser.role));\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n};\r\n// Register User\r\nexport const signUp = createAsyncThunk(\r\n  \"user/register\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const res = await myAxios.post(\"/user/register\", body);\r\n      return res.data;\r\n    } catch (e) {\r\n      if (e.message == \"Network Error\") {\r\n        return rejectWithValue(\"Check The Server\");\r\n      }\r\n    }\r\n  }\r\n);\r\n// Login User\r\nexport const login = createAsyncThunk(\r\n  \"user/login\",\r\n  async (data, { rejectWithValue }) => {\r\n    try {\r\n      const newData = JSON.stringify(data);\r\n      const res = await myAxios.post(\"/user/login\", newData, {\r\n        headers: { \"Content-type\": \"application/json\" },\r\n      });\r\n      return res.data;\r\n    } catch (e) {\r\n      if (e.message == \"Network Error\") {\r\n        return rejectWithValue(\"Check The Server\");\r\n      }\r\n    }\r\n  }\r\n);\r\n// Update User\r\nexport const update = createAsyncThunk(\r\n  \"user/update\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const res = await myAxios.put(\"/user/update\", body, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return res.data;\r\n    } catch (e) {\r\n      if (e.message == \"Network Error\") {\r\n        return rejectWithValue(\"Check The Server\");\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    loggedUser: null,\r\n    token: null,\r\n    avatar: \"\",\r\n    data: [],\r\n    role: null,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    setUserId: (state, action) => {\r\n      state.loggedUser = action.payload;\r\n    },\r\n    setToken: (state, action) => {\r\n      state.token = action.payload;\r\n    },\r\n    setAvatar: (state, action) => {\r\n      state.avatar = action.payload;\r\n    },\r\n    setUserRole: (state, action) => {\r\n      state.role = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Sign Up\r\n    builder.addCase(signUp.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n    });\r\n    builder.addCase(signUp.rejected, (state, action) => {\r\n      state.error = action.payload;\r\n    });\r\n    // Login User\r\n    builder.addCase(login.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n    });\r\n    builder.addCase(login.rejected, (state, action) => {\r\n      state.error = action.payload;\r\n    });\r\n    // Update User\r\n    builder.addCase(update.fulfilled, (state, action) => {\r\n      state.data = action.payload;\r\n    });\r\n    builder.addCase(update.rejected, (state, action) => {\r\n      state.error = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { setUserId, setToken, setAvatar, setUserRole } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}